{"version":3,"sources":["constants.js","services/authServices.js","pages/Login.jsx","pages/DogCard.jsx","pages/DogData.jsx","pages/FetchRewardDropdown.jsx","pages/FetchRewardPagination.jsx","pages/FilterName.jsx","services/locationServices.js","services/dogServices.js","pages/Dashboard.jsx","pages/NavigationBar.jsx","pages/DogFound.jsx","App.js","reportWebVitals.js","index.js","Resources/Images/Fetch_Rewards_Logo.jpg","Resources/Images/no-data.webp"],"names":["header","Headers","Content-Type","fetch-api-key","FETCH_API","MAX_PAGE","DATA_PER_PAGE","COMMON_ARG","method","credentials","headers","FILTERS_MENU","SORT_BY","value","label","DEFAULT_MAX_AGE","DEFAULT_MIN_AGE","AGE_MENU","Array","from","length","_","i","DEFAULT_SEARCH_QUERY","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","checkLogin","_ref","_asyncToGenerator","_callee","_context","fetch","response","status","e","apply","arguments","login","_ref2","_callee2","username","email","payload","_context2","_objectSpread","body","JSON","stringify","ok","_x","_x2","logout","_ref3","_callee3","_context3","Login","props","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","setEmail","_useState5","_useState6","errors","setErrors","navigate","useNavigate","React","createElement","className","Form","onSubmit","trim","test","validateFields","preventDefault","onLogin","console","log","Group","controlId","onChange","target","Label","Control","placeholder","isInvalid","Feedback","Button","variant","DogCard","dog","onSelect","isSelected","Card","concat","onClick","id","Img","src","img","Body","Title","breed","Text","age","zip_code","DogData","dogs","selectedCards","setSelectedCards","require","alt","style","width","height","handleCardSelect","includes","filter","cardId","_toConsumableArray","Container","Row","xs","md","map","Col","FetchRewardDropdown","options","data","Select","assign","isSearchable","FetchRewardPagination","currentPage","setCurrentPage","startPageIndex","setStartPageIndex","endPageIndex","setEndPageIndex","endIndex","Math","min","ceil","total","useEffect","handlePageClick","onPageChange","text","parseInt","Pagination","hidden","Prev","onPrevClick","items","page","PageItem","active","renderItem","Next","onNextClick","FilterName","getStates","State","getStatesOfCountry","isoCode","getCities","City","getCitiesOfCountry","getCityByState","getCitiesOfState","getLocation","states","city","json","getDogIds","search","getDogData","dogIds","getBreeds","getMatch","_ref4","_callee4","_context4","_x3","Dashboard","setDogs","isLoading","setIsLoading","breeds","setBreeds","_useState7","_useState8","selectedbreeds","setSelectedbreeds","_useState9","_useState10","selectedStates","setSelectedStates","_useState11","_useState12","previousPageQuery","setPreviousPageQuery","_useState13","_useState14","nextPageQuery","setNextPageQuery","_useState15","_useState16","setTotal","_useState17","_useState18","cities","setCities","_useState19","_useState20","selectedcity","setSelectedcity","_useState21","_useState22","currentPageQuery","setCurrentPageQuery","_useState23","_useState24","minimumAge","setMinimumAge","_useState25","_useState26","maximumAge","setMaximumAge","_useState27","_useState28","ageAlert","setAgeAlert","_useState29","_useState30","show","setShow","_useState31","_useState32","selectedSort","setSelectedSort","_useState33","_useState34","alert","setAlert","_useState35","_useState36","query","fetchDogData","resultIds","arr","getZipCodes","locations","results","location","handleMatch","findMatch","getSearchQuery","zipCodes","join","zipcode","handleSearch","handleClose","index","isMulti","isClearable","Stack","direction","gap","disabled","Offcanvas","onHide","placement","Header","closeButton","Alert","onClose","dismissible","Spinner","animation","role","pageNumber","NavigationBar","Navbar","expand","Brand","href","Fetch_Rewards_Logo","Toggle","aria-controls","loggedIn","Collapse","res","onLogout","backgroundColor","DogFound","finalDog","setFinalDog","setHeight","setWidth","confetiRef","useRef","selectedDog","match","current","clientHeight","clientWidth","ref","Confetti","numberOfPieces","size","toDashboard","App","isLoggedIn","setIsLoggedIn","selectedDogs","setSelectedDogs","Fragment","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter","basename","module","p"],"mappings":"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","file":"static/js/main.3014a011.chunk.js","sourcesContent":["const FETCH_API_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NzgzMDU2MTF9.Ky49nXH6qgHJQ0CBsZGYsP7_Is2am3u5j3RAdEl457s\";\n\nconst header = new Headers({\n    \"Content-Type\": \"application/json\",\n    'fetch-api-key': FETCH_API_KEY\n});\n\nconst FETCH_API = \"https://frontend-take-home-service.fetch.com\";\n\nconst MAX_PAGE = 10;\nconst DATA_PER_PAGE = 25;\n\nconst COMMON_ARG = {\n    method: 'GET',\n    credentials: 'include',\n    headers: header\n}\n\nconst FILTERS_MENU = [\"Breeds\", \"States\", \"Cities\"];\nconst SORT_BY = [{value: 'asc', label: 'A to Z'}, {value: 'desc', label: 'Z to A'}];\nconst DEFAULT_MAX_AGE = {value: 14, label: 14};\nconst DEFAULT_MIN_AGE = {value: 1, label: 1};\nconst AGE_MENU = Array.from({length: DEFAULT_MAX_AGE.value}, (_, i) => i + 1);\nconst DEFAULT_SEARCH_QUERY = '/dogs/search?';\n\nexport {\n    FETCH_API,\n    header,\n    MAX_PAGE,\n    DATA_PER_PAGE,\n    COMMON_ARG,\n    FILTERS_MENU,\n    SORT_BY,\n    AGE_MENU,\n    DEFAULT_MAX_AGE,\n    DEFAULT_MIN_AGE,\n    DEFAULT_SEARCH_QUERY\n}","import { COMMON_ARG, FETCH_API } from \"../constants\";\n\nexport const checkLogin = async () => {\n    return fetch(FETCH_API, COMMON_ARG)\n    .then(response => {\n        if (response.status !== 401) {\n            return response;\n        } else {\n            throw new Error(\"Logged Out\");\n        }\n    }).catch(e => {\n        throw e;\n    });\n}\n\nexport const login = async (username, email) => {\n    const payload = {\n        name: username,\n        email: email\n    }\n    return fetch(FETCH_API + '/auth/login', {\n        ...COMMON_ARG,\n        method: 'POST',\n        body: JSON.stringify(payload)\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        }\n    }).catch(e => {\n        throw e;\n    });\n};\n\nexport const logout = async () => {\n    return fetch(FETCH_API + '/auth/logout', {\n        ...COMMON_ARG,\n        method: 'POST'\n    })\n    .then(response => {\n        if (response.ok) {\n            return response;\n        }\n    }).catch(e => {\n        throw e;\n    });\n};","import React from 'react';\nimport { useState } from \"react\";\nimport { useNavigate} from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { login } from '../services/authServices';\n\nfunction Login(props) {\n    const [userName,setUserName] = useState();\n    const [email,setEmail] = useState(\"\");\n    const [errors, setErrors] = useState({email: \"\", userName: \"\"});\n    const navigate = useNavigate();\n\n    const validateFields = () => {\n        const err = {};\n        if (!userName.trim()) err.userName = \"UserName is required\";\n        if (!email.trim()) {\n            err.email = 'Email is required';\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            err.email = 'Email is invalid';\n        }\n        setErrors(err);\n    }\n\n    const handleSubmit = (e) => {\n        validateFields();\n        e.preventDefault();\n        login(userName.trim(), email.trim()).then(response => {\n            if(response.ok){\n                props.onLogin();\n                navigate(\"/dashboard\");\n            }\n        }).catch(e => {\n            console.log(errors);\n        })\n    };\n\n    return (\n        <div className=\"bg-image\">\n            <div className=\"Auth-form-container\">\n                <div className=\"Auth-form\">\n                    <div className=\"Auth-form-content\">\n                        <h3 className=\"Auth-form-title\">Sign in</h3>\n                        <Form onSubmit={handleSubmit}>\n                            <Form.Group className=\"mb-3\" controlId=\"fromBasic\" onChange={(e) => setUserName(e.target.value)}>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"username\" placeholder=\"Enter Username\" isInvalid={!!errors.userName}/>\n                                {errors.userName && <Form.Control.Feedback type='invalid'>{errors.userName}</Form.Control.Feedback>}\n                            </Form.Group>\n                            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type=\"email\"\n                                                placeholder=\"Enter email\"\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}\n                                                isInvalid={!!errors.email}\n                                />\n                                {errors.email && <Form.Control.Feedback type={\"invalid\"}>{errors.email}</Form.Control.Feedback>}\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function DogCard({dog, onSelect, isSelected}) {\n    const handleSelect = (id) => {\n        if (onSelect) {\n            onSelect(id);\n        }\n    }\n    return (\n        <Card className={`mb-3 ${isSelected ? 'card-selected' : ''}`}\n            onClick={() => handleSelect(dog.id)}\n        >\n            <Card.Img variant=\"top\" src={dog.img} className=\"card-image-container\"/>\n            <Card.Body>\n                <Card.Title>{dog.breed}</Card.Title>\n                <Card.Text>\n                    Name: {dog.name}\n                    <br/>\n                    Age: {dog.age}\n                    <br/>\n                    Zipcode: {dog.zip_code}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport DogCard from \"./DogCard\";\n\nexport default function DogData({dogs, selectedCards, setSelectedCards}) {\n    if (dogs.length === 0) {\n        return (\n            <div className=\"no-data-text\">\n                <img src={require('../Resources/Images/no-data.webp')} alt='NO DOG FOUND' style={{ width: 300, height: 200 }}/>\n                <h4>Oops, No Dogs Found!</h4>\n            </div>\n        );\n    }\n\n    const handleCardSelect = (id) => {\n        if (!selectedCards.includes(id)) {\n            setSelectedCards([...selectedCards, id]);\n        } else {\n            setSelectedCards(selectedCards.filter((cardId) => cardId !== id));\n        }\n    }\n\n    return (\n        <Container>\n            <Row xs={1} md={4}>\n                {\n                    dogs.map(dog => <Col key={dog.id} className=\"mb-5\" id={dog.id}>\n                        <DogCard dog={dog}\n                            isSelected={selectedCards.includes(dog.id)}\n                            onSelect={handleCardSelect}\n                        />\n                    </Col>)\n                }\n            </Row>\n        </Container>\n    );\n}","import React from \"react\";\nimport Select from \"react-select\";\n\nexport default function FetchRewardDropdown(props) {\n    const options = props.data && props.data.map(data => {\n        return {value: data, label: data}\n    });\n\n    return (\n        <div className=\"dropdown-container\">\n            <Select \n                options={options} \n                isSearchable={true} \n                {...props}\n            />\n        </div>\n    );\n}","import React, { useEffect, useState }  from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport PageItem from \"react-bootstrap/PageItem\";\nimport { DATA_PER_PAGE, MAX_PAGE } from '../constants';\n\nfunction FetchRewardPagination (props) {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [startPageIndex, setStartPageIndex] = useState(1);\n    const [endPageIndex, setEndPageIndex] = useState(MAX_PAGE);\n\n    const endIndex = Math.min(MAX_PAGE, Math.ceil(props.total/DATA_PER_PAGE));\n    \n    useEffect(() => {\n        setEndPageIndex(endIndex);\n    },[props.total]);\n\n    const handlePrevClick = () => {\n        if (currentPage > 1) {\n            if (currentPage === startPageIndex) {\n                setStartPageIndex(currentPage - MAX_PAGE);\n                setEndPageIndex(currentPage - 1);\n            }\n            props.onPrevClick();\n            setCurrentPage(currentPage - 1);\n        }\n    }\n\n    const handleNextClick = () => {\n        if (currentPage < Math.ceil(props.total/DATA_PER_PAGE)) {\n            if (currentPage === endPageIndex) {\n                setStartPageIndex(currentPage + 1);\n                setEndPageIndex(Math.min(currentPage + MAX_PAGE, Math.ceil(props.total/DATA_PER_PAGE)));\n            }\n            props.onNextClick();\n            setCurrentPage(currentPage + 1);\n        }\n    }\n\n    const handlePageClick = (e) => {\n        props.onPageChange(e.target.text);\n        setCurrentPage(parseInt(e.target.text));\n    }\n\n    const renderItem = () => {\n        const items = [];\n        for (let page = startPageIndex; page <= endPageIndex; page++) {\n            items.push(\n                <PageItem key={page} onClick={e => handlePageClick(e)} value={page} active={page === currentPage}>\n                    { page }\n                </PageItem>\n            );\n        }\n        return items;\n    }\n\n    return (\n        <Pagination className=\"page-footer\" hidden={props.hidden}>\n            <Pagination.Prev onClick={handlePrevClick}/>\n            {renderItem()}\n            <Pagination.Next onClick={handleNextClick}/>\n        </Pagination>\n    );\n}\n\nexport default FetchRewardPagination;","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\n\nexport default function FilterName({name, xs}) {\n    return (\n        <Col xs={3}><h4>{name}</h4></Col>\n    );\n}","import { State, City } from \"country-state-city\";\nimport { COMMON_ARG, FETCH_API } from \"../constants\";\n\nexport const getStates = State.getStatesOfCountry(\"US\").map(state => state.isoCode);\n\nexport const getCities = City.getCitiesOfCountry(\"US\");\n\nexport const getCityByState = (state) => {\n    return City.getCitiesOfState(\"US\",state);\n}\n\nexport const getLocation = async (states, city) => {\n    const payload = {\n        states: states,\n        city: city\n    };\n    return fetch(FETCH_API + '/locations/search', {\n        ...COMMON_ARG,\n        method: 'POST',\n        body: JSON.stringify(payload)\n    }).then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n    }).catch(e => {\n        throw e;\n    });\n}","import { COMMON_ARG, FETCH_API } from \"../constants\";\n\nexport const getDogIds = async (search) => {\n    return fetch(FETCH_API + search, COMMON_ARG)\n    .then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        throw response;\n    }).catch(e => {\n        throw e;\n    });\n};\n\nexport const getDogData = async (dogIds) => {\n    return fetch(FETCH_API + '/dogs', {\n        ...COMMON_ARG,\n        method: 'POST',\n        body: JSON.stringify(dogIds)\n    }).then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        throw response;\n    }).catch(e => {\n        throw e;\n    });\n}\n\nexport const getBreeds = async () => {\n    return fetch(FETCH_API+'/dogs/breeds', COMMON_ARG)\n    .then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n        throw response;\n    }).catch(e => {\n        throw e;\n    });\n}\nexport const getMatch = async (dogIds) => {\n    return fetch(FETCH_API+'/dogs/match', {\n        ...COMMON_ARG,\n        method: 'POST',\n        body: JSON.stringify(dogIds)\n    }).then(response => {\n        if(response.ok){\n            return response.json();\n        }\n        throw response;\n    }).catch(e => {\n        throw e;\n    })\n}","import React  from 'react';\nimport { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Alert from 'react-bootstrap/Alert';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport DogData from './DogData';\nimport FetchRewardDropdown from './FetchRewardDropdown';\nimport FetchRewardPagination from \"./FetchRewardPagination\";\nimport FilterName from './FilterName';\n\nimport { getCities, getCityByState, getLocation, getStates } from '../services/locationServices';\nimport { getBreeds, getDogData, getDogIds } from '../services/dogServices';\nimport { AGE_MENU, DEFAULT_MAX_AGE, DEFAULT_MIN_AGE, DEFAULT_SEARCH_QUERY, FILTERS_MENU, SORT_BY } from '../constants';\nimport {Stack} from \"react-bootstrap\";\n\nfunction Dashboard(props) {\n    const [dogs, setDogs] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [breeds, setBreeds] = useState([]);\n    const [selectedbreeds, setSelectedbreeds] = useState([]);\n    const [selectedStates, setSelectedStates] = useState([]);\n    const [previousPageQuery, setPreviousPageQuery] = useState(\"\");\n    const [nextPageQuery, setNextPageQuery] = useState(\"\");\n    const [total, setTotal] = useState(0);\n    const [cities, setCities] = useState(getCities);\n    const [selectedcity, setSelectedcity] = useState();\n    const [currentPageQuery,setCurrentPageQuery] = useState(DEFAULT_SEARCH_QUERY);\n    const [minimumAge, setMinimumAge] = useState(DEFAULT_MIN_AGE);\n    const [maximumAge, setMaximumAge] = useState(DEFAULT_MAX_AGE);\n    const [ageAlert, setAgeAlert] = useState(false);\n    const [show, setShow] = useState(false);\n    const [selectedSort, setSelectedSort] = useState(SORT_BY[0]);\n    const [alert, setAlert] = useState(false);\n    const [selectedCards, setSelectedCards] = useState([]);\n\n    useEffect(() => {\n        let query = DEFAULT_SEARCH_QUERY + `sort=breed:${selectedSort.value}&`;\n        getBreeds().then(data => setBreeds(data));\n        fetchDogData(query);\n    },[]);\n\n    useEffect(() => {\n        const cities = []\n        selectedStates.forEach(state =>\n            cities.push(...getCityByState(state.value).map(city => city.name))\n        );\n        setCities(cities);\n    }, [selectedStates]);\n\n    const fetchDogData = (query) => {\n        setIsLoading(true);\n        getDogIds(query).then(data => {\n            setTotal(data.total);\n            setNextPageQuery(data.next);\n            setPreviousPageQuery(data.prev);\n            getDogData(data.resultIds).then(data => {\n                let arr = data.map((dog) => {\n                    return {...dog, isSelected : false}\n                })\n                setDogs(arr);\n                setIsLoading(false);\n            });\n        });\n    }\n\n    const fetchNextPage = () => {\n        fetchDogData(nextPageQuery);\n    }\n\n    const fetchPrevPage = () => {\n        fetchDogData(previousPageQuery);\n    }\n\n    const fetchPage = (pageNumber) => {\n        const from = (pageNumber - 1) * 25;\n        fetchDogData(currentPageQuery+'from='+from);\n    }\n\n    const getZipCodes = async () => {\n        const locations = await getLocation(selectedStates, selectedcity);\n        return locations.results.map(location => location.zip_code);\n    }\n \n    const handleSelectedBreeds = (data) => {\n        setSelectedbreeds(data);\n    }\n\n    const handleSelectedStates = (data) => {\n        setSelectedStates(data);\n    }\n\n    const handleSelectedCity = (data) => {\n        setAlert(false);\n        setSelectedcity(data ? data.value : \"\");\n    }\n\n    const handleMatch = async () => {\n        props.findMatch(selectedCards);\n    }\n\n    const getSearchQuery = (zipCodes) => {\n        let query = DEFAULT_SEARCH_QUERY + `sort=breed:${selectedSort.value}&`;\n        query += selectedbreeds.map(breed => `breeds=${breed.value}&`).join(\"\");\n        query += zipCodes.map(zipcode => `zipCodes=${zipcode}&`).join(\"\");\n        return (query + `ageMin=${minimumAge.value}&ageMax=${maximumAge.value}&`);\n    }\n\n    const handleSearch = async () => {\n        if(minimumAge.value > maximumAge.value){\n            setAgeAlert(true);\n            return;\n        }\n        setAgeAlert(false);\n        if (selectedStates.length > 0 && !selectedcity) {\n            setAlert(true);\n            return;\n        }\n        let zipCodes = [];\n        if (selectedcity) {\n            zipCodes = await getZipCodes();\n            if (zipCodes.length === 0) {\n                setTotal(0);\n                setDogs([]);\n                return;\n            }\n        }\n        const query = getSearchQuery(zipCodes);\n        setCurrentPageQuery(query);\n        fetchDogData(query);\n    }\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const showCanvas = () => {\n        return (\n            <Offcanvas show={show} onHide={handleClose} placement={\"end\"}>\n                <Offcanvas.Header closeButton>\n                    <Offcanvas.Title>More Filters</Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <FilterName name='Minimum Age' xs={12}/>\n                    <FetchRewardDropdown\n                        data={AGE_MENU}\n                        value={[minimumAge]}\n                        onChange={setMinimumAge}\n                    />\n                    <FilterName name='Maximum Age' xs={12}/>\n                    <FetchRewardDropdown\n                        data={AGE_MENU}\n                        value={[maximumAge]}\n                        onChange={setMaximumAge}\n                    />\n                    {ageAlert && <Alert variant=\"danger\" onClose={() => setAgeAlert(false)} dismissible>\n                        <p>\n                            Maximum Age Cannot be less than Minimum Age\n                        </p>\n                    </Alert>}\n                    <FilterName name='Sort By' xs={12}/>\n                    <FetchRewardDropdown\n                        options={SORT_BY}\n                        value={[selectedSort]}\n                        onChange={setSelectedSort}\n                    />\n                    <Button variant=\"outline-primary\" onClick={handleSearch} > Apply </Button>\n                </Offcanvas.Body>\n            </Offcanvas>\n        )\n    }\n\n    return (\n        <div className=\"bg-color\">\n            <div className='parameters-container'>\n                <Container>\n                    <Row>\n                        { FILTERS_MENU.map((name, index) => <FilterName key={index} name={name}/>) }\n                    </Row>\n                    <Row>\n                        <Col xs={3}>\n                            <FetchRewardDropdown\n                                data={breeds}\n                                placeholder=\"All Breeds\"\n                                value={selectedbreeds}\n                                onChange={handleSelectedBreeds}\n                                isMulti\n                            />\n                        </Col>\n                        <Col xs={3}>\n                            <FetchRewardDropdown\n                                data={getStates}\n                                placeholder=\"All States\"\n                                value={selectedStates}\n                                onChange={handleSelectedStates}\n                                isMulti\n                            />\n                        </Col>\n                        <Col xs={3}>\n                            <FetchRewardDropdown\n                                data={cities}\n                                placeholder=\"Select City\"\n                                onChange={handleSelectedCity}\n                                isClearable={true}\n                            />\n                        </Col>\n                    </Row>\n                </Container>\n                <div className=\"align-buttons\">\n                    <Stack direction={\"horizontal\"} gap={3}>\n                        <Button variant=\"outline-primary\" onClick={handleSearch} >Search</Button>\n                        <Button variant=\"outline-primary\" onClick={handleShow}> More Filters </Button>\n                        <Button variant=\"outline-primary\" onClick={handleMatch} disabled={selectedCards.length === 0}>Find a Match</Button>\n                    </Stack>\n                </div>\n            </div>\n            {\n                show && showCanvas()\n            }\n            <div className=\"alert-message\">\n                {alert &&\n                    <Alert variant=\"danger\" onClose={() => setAlert(false)} dismissible>\n                        <p>\n                            Please select a city\n                        </p>\n                    </Alert>\n                }\n            </div>\n            {isLoading ? (\n                <div className=\"center\">\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                </div>\n            ) : (\n                <div>\n                    <DogData dogs={dogs}\n                        selectedCards={selectedCards}\n                        setSelectedCards={setSelectedCards}\n                    />\n                </div>\n            )}\n                <FetchRewardPagination\n                    onPrevClick={fetchPrevPage}\n                    onNextClick={fetchNextPage}\n                    onPageChange={fetchPage}\n                    total={total}\n                    hidden={isLoading}\n                />\n        </div>\n    );\n}\n\nexport default Dashboard;","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport Fetch_Rewards_Logo from '../Resources/Images/Fetch_Rewards_Logo.jpg'\nimport { logout } from '../services/authServices';\n\nfunction NavigationBar(props) {\n    const navigate = useNavigate();\n\n    const onLogout = () => {\n        logout().then(res => {\n            navigate('/');\n            props.onLogout();\n        });\n    }\n    return (\n        <Navbar expand=\"lg\">\n            <Container>\n                <Navbar.Brand href=\"#home\">\n                    <img className=\"image-container\" alt='Fetch Rewards' src={Fetch_Rewards_Logo}/>\n                    Dog Finder\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                { props.loggedIn && <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n                    <Button type=\"submit\" onClick={onLogout} style={{backgroundColor: \"#300D38\"}}>\n                        Log out\n                    </Button>\n                </Navbar.Collapse> }\n            </Container>\n        </Navbar>\n    );\n}\n\nexport default NavigationBar;","import React  from 'react';\nimport Confetti from \"react-confetti\";\nimport { useEffect, useState, useRef } from 'react';\nimport {getDogData, getMatch} from \"../services/dogServices\";\nimport DogCard from './DogCard';\nimport Button from 'react-bootstrap/Button';\n\nfunction DogFound(props) {\n    const[finalDog, setFinalDog] = useState({});\n    const [height, setHeight] = useState(null);\n    const [width, setWidth] = useState(null);\n    const confetiRef = useRef(null);\n\n    useEffect(() => {\n        getMatch(props.selectedDog).then(data => {\n            getDogData([data.match]).then(data => {\n                setFinalDog(data[0]);\n            });\n        });\n        setHeight(confetiRef.current.clientHeight);\n        setWidth(confetiRef.current.clientWidth);\n    },[]);\n\n    return(\n        <div>\n            <div className=\"Dog-Found-container\" ref={confetiRef}>\n                <Confetti numberOfPieces={150} width={width} height={height} />\n                <div className=\"Dog-Found\">\n                    <h3 className=\"m-3\">Congratulations!, You found a new family member</h3>\n                    <DogCard dog={finalDog}/>\n                    <div className=\"align-center\">\n                        <Button variant=\"primary\" size=\"lg\" onClick={props.toDashboard}>\n                            Go to Dashboard\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DogFound;","import React, { useEffect, useState }  from 'react';\nimport './App.css';\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport NavigationBar from './pages/NavigationBar';\nimport { checkLogin } from './services/authServices';\nimport DogFound from \"./pages/DogFound\";\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [selectedDogs, setSelectedDogs] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    login();\n  },[]);\n\n  const login = () => {\n    checkLogin().then(res => {\n      setIsLoggedIn(true);\n      navigate('/dashboard');\n    }).catch(e => {\n      console.log(e);\n      setIsLoggedIn(false);\n      navigate('/login');\n    });\n  }\n\n  const setDogs = (data) => {\n    setSelectedDogs(data);\n    navigate('/dogfound');\n  }\n\n  const toDashboard = () => {\n    navigate('/dashboard');\n  }\n\n  return (\n      <>\n        <NavigationBar loggedIn={isLoggedIn} onLogout={() => {\n          setIsLoggedIn(false);\n          navigate('/login');\n        }}/>\n        <Routes>\n          <Route exact path=\"/login\" element={<Login onLogin={() => setIsLoggedIn(true)}/>} />\n          <Route exact path=\"/dashboard\" element={<Dashboard findMatch={setDogs}/>}/>\n          <Route exact path=\"/dogfound\" element={<DogFound selectedDog={selectedDogs} toDashboard={toDashboard}/>}/>\n        </Routes>\n      </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <BrowserRouter basename=\"/\">\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/Fetch_Rewards_Logo.dff593fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no-data.778180e9.webp\";"],"sourceRoot":""}